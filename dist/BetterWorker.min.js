!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t=t||self).BetterWorker=e()}(this,function(){"use strict";var s=(t.createThread=function(t){return new Promise(function(n,e){window.fetch(t).then(function(t){return t.text()}).then(function(t){t+="\nCmdType = {\n  ping: 'ping',\n  pong: 'pong',\n  close: 'close',\n  task: 'task',\n};\nfunction MakePongCmd() {\n  const cmd = {\n    cmd: CmdType.pong,\n  };\n  return cmd; \n};\nfunction MakeTaskCmd(payload) {\n  const cmd = {\n    cmd: CmdType.task,\n    payload: payload,\n  };\n  return cmd;\n};\nonmessage = function(e) {\n  const cmd = e.data.cmd;\n  // console.error(e.data);\n  switch(cmd) {\n    case CmdType.ping: \n     postMessage(MakePongCmd());\n      break;\n    case CmdType.close:\n      close();\n      break;\n    case CmdType.task:\n      const payload = e.data.payload;\n      const index = payload.index;\n      const method = payload.method;\n      const param = payload.param;\n      const key = payload.key;\n      const startTime = payload.startTime;\n      eval(method)(param).then((res) => {\n        const data =  {\n          index,\n          method,\n          param,\n          key,\n          startTime,\n          res\n        };\n        postMessage(MakeTaskCmd(data))\n      }).catch((error) => {\n        const data =  {\n          index,\n          method,\n          param,\n          key,\n          startTime,\n          res\n        };\n        postMessage(MakeTaskCmd(data));\n      });\n      break;\n  }\n}";var e=new window.Worker(window.URL.createObjectURL(new window.Blob([t])));n(e)}).then(function(t){e(t)})})},t);function t(){}var p={ping:"ping",pong:"pong",close:"close",task:"task"};function e(){return{cmd:p.ping}}var r=(n.prototype.initWorker=function(t){this.worker=t,this.worker.onmessage=this.doTaskListener.bind(this),this.worker.onerror=this.doError.bind(this),this.ready=!0,this.startTask()},n.prototype.close=function(){this.worker.postMessage({cmd:p.close}),this.worker.terminate(),this.worker=null,this.taskQueue=null,this.taskCb=null},n.prototype.doTask=function(t,e,n,o){this.taskQueue.push({index:t,method:e,param:n,listener:o}),this.startTask()},n.prototype.doTaskListener=function(t){switch(t.data.cmd){case p.pong:break;case p.task:this.noticeListener(t.data.payload)}},n.prototype.noticeListener=function(t){var e=t.index,n=t.param,o=t.method,a=t.key,s=t.res,r=Date.now()-t.startTime;this.taskCb.get(a)[0]({index:e,param:n,method:o,data:s,costTime:r})},n.prototype.doError=function(t){},n.prototype.startTask=function(){if(this.ready)for(var t=0,e=this.taskQueue.length;t<e;t+=1){var n=this.taskQueue.shift(),o=n.index,a=n.method,s=n.param,r=n.listener;this.key+=1;var i={index:o,method:a,param:s,key:this.key,startTime:Date.now()},d=[r,n.errorListener],c=(h=i,{cmd:p.task,payload:h});this.taskCb.set(this.key,d),this.worker.postMessage(c)}var h},n.prototype.ping=function(){this.worker.postMessage(e)},n);function n(){this.worker=null,this.key=0,this.ready=!1,this.taskQueue=[],this.taskCb=new Map}var o=(a.prototype.disPatcherTask=function(t,e,n,o){this.thread.get(t).doTask(t,e,n,o)},a.prototype.close=function(){this.thread.forEach(function(t,e,n){t.close()}),this.thread=null,this.wps=null},a.prototype.init=function(){for(var o=this,t=function(e,t){var n=new r;o.thread.set(e,n),s.createThread(a.wps[e]).then(function(t){o.thread.get(e).initWorker(t)}).catch(function(t){throw new Error("init webworker error: "+t)})},a=this,e=0,n=this.wps.length;e<n;e+=1)t(e)},a);function a(t){this.thread=new Map,this.wps=t,this.init()}function i(t){if(t.length>i.MaxThread)throw new Error("init fail, max thread count is:"+i.MaxThread);this.tm=new o(t)}return i.prototype.doTask=function(t,e,n,o){if(!this.tm)throw new Error("better worker has destory");this.tm.disPatcherTask(t,e,n,o)},i.prototype.close=function(){this.tm.close(),this.tm=null},i.MaxThread=(navigator.hardwareConcurrency||4)+2,i.VERSION="1.1.0",i});
